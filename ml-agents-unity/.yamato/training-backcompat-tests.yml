
test_mac_backcompat_2019.4:
  {% capture editor_version %}2019.4{% endcapture %}
  {% capture csharp_backcompat_version %}1.0.0{% endcapture %}
  # This test has to run on mac because it requires the custom build of tensorflow without AVX
  # Test against 2020.1 because 2020.2 has to run against package version 1.2.0
  name: Test Mac Backcompat Training {{ editor_version }}
  agent:
    type: Unity::VM::osx
    image: ml-agents/ml-agents-bokken-mac:0.1.5-853758
    flavor: b1.small
  variables:
    UNITY_VERSION: {{ editor_version }}
  commands:
    - |
      python -m venv venv && source venv/bin/activate
      python -m pip install pyyaml --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple
      python -m pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      unity-downloader-cli -u {{ editor_version }} -c editor --wait --fast
      # Backwards-compatibility tests.
      # If we make a breaking change to the communication protocol, these will need
      # to be disabled until the next release.
      python -u -m ml-agents.tests.yamato.standalone_build_tests --build-target=mac
      python -u -m ml-agents.tests.yamato.training_int_tests --csharp {{ csharp_backcompat_version }}
    - |
      python -m venv venv_old && source venv_old/bin/activate
      python -m pip install pyyaml --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple
      python -u -m ml-agents.tests.yamato.training_int_tests --python 0.24.0
  triggers:
    cancel_old_ci: true
    recurring:
      - branch: main
        frequency: daily
  artifacts:
    logs:
      paths:
        - "artifacts/standalone_build.txt"
        - "artifacts/inference.nn.txt"
        - "artifacts/inference.onnx.txt"
        - "artifacts/*.log"
    standalonebuild:
      paths:
        - "artifacts/testPlayer*/**"
        - "artifacts/models/**"
